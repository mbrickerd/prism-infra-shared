name: Shared Infrastructure CD

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  ARM_USE_OIDC: true

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform Init
        working-directory: ./terraform
        run: |
          terraform init
        env:
          ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: ./terraform
          framework: terraform
          config_file: ./checkov.yaml

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=plan.tfplan
        env:
          ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          ARM_USE_OIDC: true

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve plan.tfplan
        env:
          ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
          GITHUB_TOKEN: ${{ secrets.TF_GITHUB_TOKEN }}
          ARM_USE_OIDC: true

  upload_data:
    name: Upload Data Files
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Filter Changed Files
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            data:
              - 'data/**'

      - name: Azure Login
        if: steps.changes.outputs.data == 'true'
        uses: azure/login@v2
        with:
          client-id: ${{ vars.AZURE_CLIENT_ID }}
          tenant-id: ${{ vars.AZURE_TENANT_ID }}
          subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Upload Data Files to Storage
        if: steps.changes.outputs.data == 'true'
        uses: bacongobbler/azure-blob-storage-upload@main
        with:
          source_dir: './data'
          container_name: 'data'
          connection_string: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          overwrite: 'true'
